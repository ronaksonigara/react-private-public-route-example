{"version":3,"sources":["components/Login.js","components/Home.js","components/Private.js","components/Restricted.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","isLogged","onClick","login","Homepage","Private","Restricted","App","useState","isLoggedIn","setIsLoggedIn","isRestricted","setIsRestricted","prevState","className","to","exact","path","component","isAuthenticated","redirect","restricted","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAAe,SAASA,EAAMC,GAC7B,OACC,gCACC,6BACGA,EAAMC,SAEL,gCADA,iCAGJ,wBAAQC,QAASF,EAAMG,MAAvB,SACGH,EAAMC,SAAsB,UAAX,cCTR,SAASG,IACvB,OAAO,sCCDO,SAASC,IACvB,OAAO,yCCDO,SAASC,IACvB,OAAO,4CC6EOC,MArEf,WAAgB,IAAD,EACsBC,oBAAS,GAD/B,mBACPC,EADO,KACKC,EADL,OAE0BF,oBAAS,GAFnC,mBAEPG,EAFO,KAEOC,EAFP,KAIRT,EAAQ,WACbO,GAAc,SAACG,GAAD,OAAgBA,MAK/B,OACC,cAAC,gBAAD,UACC,sBAAKC,UAAU,iBAAf,UACC,6BAAKL,EAAa,YAAc,kBAChC,8BACC,+BACC,6BACC,cAAC,OAAD,CAAMM,GAAG,IAAT,oBAED,6BACC,cAAC,OAAD,CAAMA,GAAG,SAAT,qBAED,6BACC,cAAC,OAAD,CAAMA,GAAG,WAAT,uBAED,6BACC,cAAC,OAAD,CAAMA,GAAG,qBAAT,iCAED,6BACC,cAAC,OAAD,CAAMA,GAAG,sBAAT,uCAIH,wBAAQb,QA1BQ,WAClBU,GAAgB,SAACC,GAAD,OAAgBA,MAyB9B,SACGF,EAAmC,qBAApB,oBAElB,eAAC,IAAD,WACC,cAAC,cAAD,CAAaK,OAAK,EAACC,KAAK,IAAIC,UAAWd,IAEvC,cAAC,cAAD,CACCa,KAAK,SACLC,UAAW,kBAAM,cAACnB,EAAD,CAAOI,MAAOA,EAAOF,SAAUQ,OAEjD,cAAC,eAAD,CACCO,OAAK,EACLC,KAAK,WACLE,gBAAiBV,EACjBW,SAAS,SACTF,UAAWb,IAEZ,cAAC,cAAD,CACCgB,WAAYV,EACZM,KAAK,qBACLC,UAAWZ,IAEZ,cAAC,eAAD,CACCU,OAAK,EACLC,KAAK,sBACLE,gBAAiBV,EACjBY,WAAYV,EACZS,SAAS,SACTF,UAAWZ,aC1DFgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ed7cdf9c.chunk.js","sourcesContent":["export default function Login(props) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>\r\n\t\t\t\t{!props.isLogged\r\n\t\t\t\t\t? \"Click below button to Log In\"\r\n\t\t\t\t\t: \"Click below button to Log Out\"}\r\n\t\t\t</h2>\r\n\t\t\t<button onClick={props.login}>\r\n\t\t\t\t{!props.isLogged ? \"Log In\" : \"Log Out\"}\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n","export default function Homepage() {\r\n\treturn <h2>Home</h2>;\r\n}\r\n","export default function Private() {\r\n\treturn <h2>Private</h2>;\r\n}\r\n","export default function Restricted() {\r\n\treturn <h2>Restricted</h2>;\r\n}\r\n","import { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Link } from \"react-router-dom\";\nimport { PublicRoute, PrivateRoute } from \"react-private-public-route\";\n\nimport Login from \"./components/Login\";\nimport Homepage from \"./components/Home\";\nimport Private from \"./components/Private\";\n\nimport Restricted from \"./components/Restricted\";\nfunction App() {\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\n\tconst [isRestricted, setIsRestricted] = useState(true);\n\n\tconst login = () => {\n\t\tsetIsLoggedIn((prevState) => !prevState);\n\t};\n\tconst restricted = () => {\n\t\tsetIsRestricted((prevState) => !prevState);\n\t};\n\treturn (\n\t\t<Router>\n\t\t\t<div className='main-container'>\n\t\t\t\t<h1>{isLoggedIn ? \"Logged in\" : \"Not Logged in\"}</h1>\n\t\t\t\t<div>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to='/'>Home</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to='/login'>Login</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to='/private'>Private</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to='/restricted-public'>Public Restricted</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to='/restricted-private'>Private Restricted</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<button onClick={restricted}>\n\t\t\t\t\t{!isRestricted ? \"Add Restriction\" : \"Remove Restriction\"}\n\t\t\t\t</button>\n\t\t\t\t<Switch>\n\t\t\t\t\t<PublicRoute exact path='/' component={Homepage} />\n\n\t\t\t\t\t<PublicRoute\n\t\t\t\t\t\tpath='/login'\n\t\t\t\t\t\tcomponent={() => <Login login={login} isLogged={isLoggedIn} />}\n\t\t\t\t\t/>\n\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath='/private'\n\t\t\t\t\t\tisAuthenticated={isLoggedIn}\n\t\t\t\t\t\tredirect='/login'\n\t\t\t\t\t\tcomponent={Private}\n\t\t\t\t\t/>\n\t\t\t\t\t<PublicRoute\n\t\t\t\t\t\trestricted={isRestricted}\n\t\t\t\t\t\tpath='/restricted-public'\n\t\t\t\t\t\tcomponent={Restricted}\n\t\t\t\t\t/>\n\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath='/restricted-private'\n\t\t\t\t\t\tisAuthenticated={isLoggedIn}\n\t\t\t\t\t\trestricted={isRestricted}\n\t\t\t\t\t\tredirect='/login'\n\t\t\t\t\t\tcomponent={Restricted}\n\t\t\t\t\t/>\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}